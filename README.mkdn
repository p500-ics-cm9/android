Install the Build Packages
--------------------------

Install using the package manager of your choice: 
-------------------------------------------------

For 32-bit & 64-bit systems: 

git-core gnupg flex bison gperf libsdl1.2-dev libesd0-dev libwxgtk2.6-dev squashfs-tools build-essential zip curl libncurses5-dev zlib1g-dev sun-java6-jdk pngcrush schedtool 

For 64-bit only systems: 

g++-multilib lib32z1-dev lib32ncurses5-dev lib32readline5-dev gcc-4.3-multilib g++-4.3-multilib
 
NOTE: gcc-4.3-multilib g++-4.3-multilib is no longer available for Ubuntu 11.04 64-bit, but should still build without issue.
 
NOTE: On Ubuntu 10.10, and variants, you need to enable the parter repository to install sun-java6-jdk:
 
add-apt-repository "deb http://archive.canonical.com/ maverick partner" 

Create the Directories
----------------------

You will need to set up some directories in your build environment. 

To create them: 

mkdir -p ~/bin 

mkdir -p ~/CM9
 
Install the Repository
----------------------

Enter the following to download make executable the "repo" binary: 

curl https://dl-ssl.google.com/dl/googlesource/git-repo/repo > ~/bin/repo 

chmod a+x ~/bin/repo 

NOTE: You may need to reboot for these changes to take effect. 

Now enter the following to initialize the repository: 

cd ~/CM9/ 

    repo init -u git://github.com/p500-ics-cm9/android.git -b ics 

repo sync 


Download RomManager which is needed by the build: 

~/CM9/vendor/cyanogen/get-rommanager 

Check for updates
-----------------
First, check for updates in the source: 

cd ~/CM9/ 

repo sync
 

Configure Build & Compile
-------------------------

Now, the environment must be configured to build and the ROM compiled, from code, for the swift. 

. build/envsetup.sh && brunch thunderg
